class Storage {
    constructor(name, storage) {
        this.storageName = name;
        this.storage = storage;
    }

    set name(name) {
        this.storageName = name;
    }

    build() {
        if (this.storageName) this.storage.setItem(this.storageName, JSON.stringify({}));
    }

    putItems(putObj) {
        let jsonStr = this.storage.getItem(this.storageName);
        let obj = {};
        try {
            obj = JSON.parse(jsonStr);
        } catch (ignore) {
        }
        this.storage.setItem(this.storageName, JSON.stringify(Object.assign(obj, putObj)));
    }

    putItem(key, value) {
        let jsonStr = this.storage.getItem(this.storageName);

        let obj = {};
        try {
            obj = JSON.parse(jsonStr);
        } catch (ignore) {
        }
        obj[key] = value;

        this.storage.setItem(this.storageName, JSON.stringify(obj));
    }

    getItem(key) {
        let jsonStr = this.storage.getItem(this.storageName);
        let obj = {};
        try {
            obj = JSON.parse(jsonStr);
        } catch (ignore) {
        }
        return obj[key];
    }

    removeItem(key) {
        let jsonStr = this.storage.getItem(this.storageName);
        let obj = {};
        try {
            obj = JSON.parse(jsonStr);
        } catch (ignore) {
        }
        delete obj[key];
        this.storage.setItem(this.storageName, JSON.stringify(obj));
    }

    remove() {
        this.storage.removeItem(this.storageName);
    }

    clear() {
        this.storage.clear();
    }
}

export default Storage;